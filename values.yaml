## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName

image:
  repository: bitsofinfo/kubernetes-ingress-info
  tag: "1.0.6"     # Required
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

## String to partially override kubernetes-ingress-info.fullname template (will maintain the release name)
# nameOverride:

## String to fully override kubernetes-ingress-info.fullname template
# fullnameOverride:

## how target k8s cluster config is loaded
##
loadConfigMode: "local"

## retrieve ingresses with the following labels (optional)
## this is a list of "key=value" pairs
## can do `--set labelSelectorIncludes=\{key1=value1,key2=value2\}`
##
labelSelectorIncludes: []

## DO NOT retrieve ingresses with the following labels (optional)
## this is a list of "key=value" pairs
## can do `--set labelSelectorExcludes=\{key1=value1,key2=value2\}`
## excludes take precedence over includes
##
labelSelectorExcludes: []

## scope of namespaces to fetch ingress objects (optional)
## fetch ingresses from ALL namespaces by default
##
namespaceScope: []

## name of header used to match host
##
hostMatchHeaderName: ""

## port the app listens on
##
listenPort: 8081

## if enabled, cache database of gathered ingress info to disk
##
databaseCache:
  enabled: false
  ## in seconds
  ttl: 30
  directory: /opt/kubernetes-ingress-info/cache

## log verbosity, default DEBUG
##
logLevel: ""

## file to store logs (optional)
##
logFile: ""

## command to be passed to kubernetes-ingress-info
##
command:
  - "info.py"

## Extra Arguments to be passed to kubernetes-ingress-info
##
extraArgs: []

## Extra env. variable to set on external-dns container.
##
## extraEnv:
## - name: VARNAME1
##   value: value1
## - name: VARNAME2
##   valueFrom:
##     secretKeyRef:
##       name: existing-secret
##       key: varname2-key
extraEnv: []

## Replica count
##
replicas: 1

## Affinity for pod assignment (this value is evaluated as a template)
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
## Node labels for pod assignment (this value is evaluated as a template)
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
##
nodeSelector: {}
## Tolerations for pod assignment (this value is evaluated as a template)
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
##
tolerations: []
## Annotations for kubernetes-ingress-info pods
##
podAnnotations: {}
## Additional labels for the pod(s).
##
podLabels: {}
## Pod priority class name
##
priorityClassName: ""

## Kubernetes svc configutarion
##
service:
  ## Kubernetes svc type
  ##
  type: ClusterIP
  port: 31311
  ## Specify the nodePort value for the LoadBalancer and NodePort service types for the client port
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Static clusterIP or None for headless services
  ##
  # clusterIP: ""
  ## External IP list to use with ClusterIP service type
  ##
  externalIPs: []
  ## Use loadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  # loadBalancerIP:
  ## Address that are allowed when svc is LoadBalancer
  ##
  loadBalancerSourceRanges: []
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}

## Kubernetes ingress configutarion
##
ingress:
  enabled: false
  ## set like this `--set ingress.annotations."annotationname"=value`
  annotations: {}
  ## set like this `--set ingress.labels."labelname"=value`
  labels: {}
  hosts:
    - name: k8-ingress-info-test.local
      path: /
      tls: false
      tlsSecret: ""

## RBAC parameteres
## https://kubernetes.io/docs/reference/access-authn-authz/rbac/
##
rbac:
  create: false
  ## Service Account for pods
  ## https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccountName: default
  ## RBAC API version
  ##
  apiVersion: v1

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
#  limits:
#    cpu: 50m
#    memory: 50Mi
#  requests:
#    memory: 50Mi
#    cpu: 10m

## Liveness Probe. The block is directly forwarded into the deployment, so you can use whatever livenessProbe configuration you want.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
livenessProbe:
  httpGet:
    path: /
    port: info-port
  initialDelaySeconds: 10
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 3
## Readiness Probe. The block is directly forwarded into the deployment, so you can use whatever readinessProbe configuration you want.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
readinessProbe:
  httpGet:
    path: /
    port: info-port
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 5
